#include <SoftwareSerial.h>
#include <OneWire.h>

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ThingSpeak.h>
#define USE_ARDUINO_INTERRUPTS false
#include <PulseSensorPlayground.h>
#include <DHT.h> 

DHT dht(D1,DHT11);

const char* ssid = "LAPTOP";   // Your Network SSID
const char* password = "11111111";       // Your Network Password
const char* server = "api.thingspeak.com";

const int PulseWire = A0;
//const int LED2 = 2;
int led = D5;
int buzzer = D6;
int Threshold = 550;


WiFiClient client;

unsigned long myChannelNumber = 2313004; //Your Channel Number (Without Brackets)
const char * writeAPIKey =  "L85OCJIFNWMH6CI2"; //Your Write API Key

PulseSensorPlayground pulseSensor;
SoftwareSerial gsmModule(2, 3);

void setup()
{
  
  
  Serial.begin(9600);
  gsmModule.begin(9600);
  
  delay(5000);
  dht.begin();
  WiFi.begin(ssid, password);
  ThingSpeak.begin(client);
  pulseSensor.analogInput(PulseWire);   
  //pulseSensor.blinkOnPulse(LED2);
  pulseSensor.setThreshold(Threshold);
  pinMode(led,OUTPUT);
  pinMode(buzzer,OUTPUT);
  if(pulseSensor.begin()){
    Serial.println("We created a pulseSensor Object!");
  }
  Serial.println("Status\tHumidy\tTemperature(C)\t(F)\tPulse");
}


void loop(){
  //setup();
  pulseSensor.sawNewSample();
  int myBPM = pulseSensor.getBeatsPerMinute();  // Calls function on our pulseSensor object that returns BPM as an "int".
  if (pulseSensor.sawStartOfBeat()) {            // Constantly test to see if "a beat happened".
    Serial.println("\nâ™¥  A HeartBeat Happened ! \n");
    Serial.print("BPM: ");                        
    Serial.println(myBPM);   
    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();

    
    //Serial.print("Humidity:");
    //Serial.print(humidity, 1);
    Serial.print("\nTemperature:");
    Serial.print(temperature, 1);
    Serial.print("\t\t");
    
    
    if (myBPM > 100 ){
      digitalWrite(led,HIGH);
      tone(buzzer,1000);
    }
    else if(myBPM < 60){
      digitalWrite(led,HIGH);
      tone(buzzer,1000);
    }
    else{
      digitalWrite(led,LOW);
      tone(buzzer,0);
    }
    ThingSpeak.setField(1, temperature);
    ThingSpeak.setField(2, myBPM);
    ThingSpeak.writeFields(myChannelNumber, writeAPIKey);    
  }
  delay(0);
  
}
